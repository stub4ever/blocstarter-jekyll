// ========================================================
// CORE SETTINGS
// ========================================================

// Base typographical styles and baseline grid. You need to define these values
// in pixels: inuitcss will convert them to more appropriate units.

$base-size: 17px !default; // Global font-size 16px
$base-line-height: 24px !default;


// Spacing values are determined based on your projectâ€™s global line height (i.e
// your baseline grid). It is not recommended that you modify these following
// variables (it can break your vertical rhythm), but if you need to, you can.

$gutter: round($base-line-height) !default; // Global margins 15px

// How many times larger/smaller than the default should our spacing unit
// variants be?


$gutter-factor-tiny: .125 !default;
$gutter-factor-small: .25 !default;
$gutter-factor-stack: .5 !default; // stacking spacing factor => default value for stack system
$gutter-factor-medium: $gutter;
$gutter-factor-large: 1.5 !default;
$gutter-factor-xlarge: 2 !default;
$gutter-factor-xxlarge: 2.5 !default;


// Check that the chosen font rules are pixel numbers.

@each $_font-globals in
	$base-size
	$base-line-height {

	@if (type-of($_font-globals) == number) {

	@if (unit($_font-globals) != "px") {
		@error "`#{$_font-globals}` needs to be a pixel value.";
	}

	} @else {
		@error "`#{$_font-globals}` needs to be a number.";
	}
}



@each $_spacing-unit in
  	$gutter-factor-stack
	$gutter-factor-tiny
	$gutter-factor-small
	$gutter-factor-large
	$gutter-factor-xlarge
    $gutter-factor-xxlarge {

	@if (type-of($_spacing-unit) == number) {

	@if (unitless($_spacing-unit) == false) {
		@error "`#{$_spacing-unit}` needs to be unitless.";
	}

	} @else {
		@error "`#{$_spacing-unit}` needs to be a number.";
	}
}



// Private/framework-only reassignment. Do not alter anything below.

$gutter-stack:  round($gutter * $gutter-factor-stack);
$gutter-tiny:  round($gutter * $gutter-factor-tiny);
$gutter-small: round($gutter * $gutter-factor-small);
$gutter-medium: $gutter-factor-medium;
$gutter-large: round($gutter * $gutter-factor-large);
$gutter-xlarge:  round($gutter * $gutter-factor-xlarge);
$gutter-xxlarge:  round($gutter * $gutter-factor-xxlarge);
