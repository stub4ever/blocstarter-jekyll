// ========================================================
// UTILS
// ========================================================

// COLUMS
$widths-fractions: 1 2 3 4 5 !default;

// Optionally, generate classes to offset items by a certain width.
$widths-offsets: true !default;


$widths-breakpoints: (
    'small': $view-small,
    'tablet': $view-tablet,
    'desktop': $view-desktop
    ) !default;


@mixin widths($columns, $breakpoint: null) {
    
    // Loop through the number of columns for each denominator of our fractions.
    @each $denominator in $columns {

        // Begin creating a numerator for our fraction up until we hit the
        // denominator.
        @for $numerator from 1 through $denominator {

            // Build a class in the format `.w3/4[@<breakpoint>]`.
            .w#{$numerator}\/#{$denominator}#{$breakpoint} {
                width: ($numerator / $denominator) * 100%;
            }


            @if ($widths-offsets == true) {

                // Build a class in the format `.w-push1/2[@<breakpoint>]`.
                .w-push#{$numerator}\/#{$denominator}#{$breakpoint} {
                    margin-left: ($numerator / $denominator) * 100%;
                }

                // Build a class in the format `.w-pull5/6[@<breakpoint>]`.
                .w-pull#{$numerator}\/#{$denominator}#{$breakpoint} {
                    margin-right: ($numerator / $denominator) * 100%;
                }
            }
        }
    }
}

@include widths($widths-fractions);

@each $width-bp-name, $width-bp-value in $widths-breakpoints {

    @media only screen and (min-width: $width-bp-value) {
        @include widths($widths-fractions, \@#{$width-bp-name});
    }
}

// SPACING
$spacing-directions: (
    null: null,
    't': '-top',
    'r': '-right',
    'b': '-bottom',
    'l': '-left',
    'h': '-left' '-right',
    'v': '-top' '-bottom',
    ) !default;

$spacing-properties: (
    'p': 'padding',
    'm': 'margin',
    ) !default;

$spacing-sizes: (
    null: $gutter-stack,
    '-tiny': $gutter-tiny,
    '-small': $gutter-small,
    '-medium': $gutter-medium,
    '-large': $gutter-large,
    '-xlarge': $gutter-xlarge,
    '-auto': auto,
    '-none': 0,
    ) !default;


@each $property-namespace, $property in $spacing-properties {

    @each $direction-namespace, $direction-rules in $spacing-directions {

        @each $size-namespace, $size in $spacing-sizes {

            .#{$property-namespace}#{$direction-namespace}#{$size-namespace} {

                @each $direction in $direction-rules {
                    #{$property}#{$direction}: $size;
                }

            }

        }

    }
}
