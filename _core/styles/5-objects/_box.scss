// Box
//
//  * A box element spacing scale based on powers of different base font-size / lineheight. <br>
//  By default it has a half gutter that stack with  section__inner or core settings variable
//
// Markup:
// <div class="section">
//     <div class="section__inner  section__inner--medium@tablet  section__inner--large@desktop">
//         <div class="box  box--medium@tablet  box--large@desktop"></div>
//     </div>
// </div>
//
// Styleguide: Objects.2

$box-sizes: (
    null: $gutter-stack,
    '--tiny': $gutter-tiny,
    '--small': $gutter-small,
    '--medium': $gutter-medium,
    '--large': $gutter-large,
    '--xlarge': $gutter-xlarge,
    '--xxlarge': $gutter-xxlarge,
    '--flush': 0
    ) !default;

$box-breakpoints: (
    'small': $view-small,
    'tablet': $view-tablet,
    'desktop': $view-desktop
    ) !default;


.box {
    padding: $gutter-stack;
}


// Size variants

.box--tiny {
    padding: $gutter-tiny;
}

.box--small {
    padding: $gutter-small;
}

.box--medium {
    padding: $gutter-medium;
}

.box--large {
    padding: $gutter-large;
}

.box--xlarge {
    padding: $gutter-xlarge;
}

.box--xxlarge {
    padding: $gutter-xxlarge;
}

.box--flush {
    padding: 0;
}


// Alignment variants.

.box--center {
    text-align: center;
}

.box--right {
    text-align: right;
}

.box--left {
    text-align: left;
}



/**
* Generate a series of device size variants to be used like so:
*
*   <div class="box  box--large@desktop">
*
*/


@each $box-bp-name, $box-bp-value in $box-breakpoints {

    @each $size-namespace, $size in $box-sizes {

        @media only screen and (min-width: $box-bp-value) {

            .box#{$size-namespace}\@#{$box-bp-name} {
                padding: $size;
            }

        }
    }
}
