// Bloc
//
//  * bloc float system. <br>
//  The bloc object provides us with a column-style bloc system. <br> This file
//  contains the basic structural elements, but classes should be complemented
//  with width utilities
//
// Markup:
// <!--The above will create a system in which the first item will be 100% width until we enter our desktop breakpoint,
// when it will become 33.333% width. The second and third items will be 50% of their parent, until they also become
// 33.333% width at the desktop breakpoint.
// -->
// <div class="bloc">
//     <div class="bloc__item  w-1/2">
//     </div>
//     <div class="bloc__item  w-1/2">
//     </div>
// </div>
//
// Styleguide: Objects.4


/* Default/mandatory classes.
========================================================================== */

/**
* 1. Allows us to use the bloc object on any type of element.
* 2. We need to defensively reset any box-model properties.
* 3. Use the negative margin trick for multi-row grids:
*    http://csswizardry.com/2011/08/building-better-grid-systems/
*/

.bloc {
    display: block; /* [1] */
    list-style: none; /* [1] */
    margin: 0; /* [3] */

    &:after {
        clear: both;
    }

    &:before,
    &:after {
        content: " ";
        display: table;
    }
}


//   *
//    * 1. Required in order to combine fluid widths with fixed gutters.
//    * 2. Default item alignment is with the tops of each other, like most
//    *    traditional grid/bloc systems.


.bloc__item {
    box-sizing: border-box; /* [1] */
    float: left;
    vertical-align: top; /* [2] */
    width: 100%;
}


// /* Vertical alignment modifiers.
//    ========================================================================== */

/**
* Align all grid items to the middles of each other.
*/

.bloc--middle {

    > .bloc__item {
        vertical-align: middle;
    }

}


/**
* Align all grid items to the bottoms of each other.
*/

.bloc--bottom {

    > .bloc__item {
        vertical-align: bottom;
    }

}





// /* Fill order modifiers.
//    ========================================================================== */

/**
* Fill up the bloc system from the centre.
*/

.bloc--center {
    text-align: center;

    > .bloc__item {
        text-align: left;
    }
}


/**
* Fill up the bloc system from the right-hand side.
*/

.bloc--right {
    text-align: right;

    > .bloc__item {
        text-align: left;
    }

}


/**
* Fill up the bloc system from the left-hand side. This will likely only be
* needed when using in conjunction with `.bloc--reverse`.
*/

.bloc--left {
    text-align: left;

    > .bloc__item {
        text-align: left;
    }

}


/**
* Reverse the rendered order of the grid system.
*/

.bloc--reverse {
    direction: rtl;

    > .bloc__item {
        direction: ltr;
    }

}


/* Autwidths modifier.
========================================================================== */

/**
* Cause bloc items to take up a non-explicit amount of width.
*/

.bloc--auto {

    > .bloc__item {
        width: auto;
    }

}
